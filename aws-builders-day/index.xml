<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Overview on AWS Turkey Builders Day</title>
    <link>http://example.org/</link>
    <description>Recent content in Overview on AWS Turkey Builders Day</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 29 Mar 2019 17:33:15 +0300</lastBuildDate>
    
	<atom:link href="http://example.org/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Hosting a Global Static Website without Servers</title>
      <link>http://example.org/lab-foundations/serverless-static-site/</link>
      <pubDate>Fri, 29 Mar 2019 17:57:38 +0300</pubDate>
      
      <guid>http://example.org/lab-foundations/serverless-static-site/</guid>
      <description>Objectives Let’s look into an interesting use case and see how you can create static websites without any servers. You can launch instances using AWS EC2 service, or AWS LighSail service, and we leave it to you to launch VM instances in the cloud. Amazon S3 can also be used for this purpose.
Services Used in this Lab:  Amazon Simple Storage Service (Amazon S3) is an object storage service that offers industry-leading scalability, data availability, security, and performance.</description>
    </item>
    
    <item>
      <title>Prerequisites</title>
      <link>http://example.org/overview/prerequisites/</link>
      <pubDate>Fri, 29 Mar 2019 17:39:55 +0300</pubDate>
      
      <guid>http://example.org/overview/prerequisites/</guid>
      <description>Preparing Cloud Environment Your first lab will focus on preparing your cloud environment and will take around 10 minutes. You need to complete this first lab, otherwise it might be harder for you to complete the following labs.
Services that you will be using in this lab:
AWS Account  AWS Identity and Access Management (IAM) - AWS Identity and Access Management (IAM) enables you to manage access to AWS services and resources securely.</description>
    </item>
    
    <item>
      <title>Creating a Virtual DC and placing a Cloud Server</title>
      <link>http://example.org/lab-foundations/virtual-dc-and-server/</link>
      <pubDate>Fri, 29 Mar 2019 17:58:18 +0300</pubDate>
      
      <guid>http://example.org/lab-foundations/virtual-dc-and-server/</guid>
      <description>Objectives Let’s look into creating virtual data centers in the cloud. This exercise guides you through the steps to create a nondefault VPC with a public subnet, and to launch an instance into your subnet.
This virtual network closely resembles a traditional network that you&amp;rsquo;d operate in your own data center, with the benefits of using the scalable infrastructure of AWS.
Services Used in this Lab:  *Virtual private cloud (VPC) is a virtual network dedicated to your AWS account.</description>
    </item>
    
    <item>
      <title>Expected Costs</title>
      <link>http://example.org/overview/costs/</link>
      <pubDate>Fri, 29 Mar 2019 17:44:22 +0300</pubDate>
      
      <guid>http://example.org/overview/costs/</guid>
      <description>You are responsible for the cost of the AWS services used while running this lab. As of the date of publication, the baseline cost for running this solution as-is should be around:
 S3 &amp;lt; 1$ [TBD]  Important note:
Cost Management advice: Whenever you are creating a cloud resource, tag it. Try setting following tag fields during the labs: project: serverlessdatalake costcenter: awsimmersionday</description>
    </item>
    
    <item>
      <title>Create a MySQL Relational DB in minutes</title>
      <link>http://example.org/lab-foundations/managed-sql-db/</link>
      <pubDate>Fri, 29 Mar 2019 17:59:04 +0300</pubDate>
      
      <guid>http://example.org/lab-foundations/managed-sql-db/</guid>
      <description>Objectives In this tutorial, you will learn how to create an environment to run your MySQL database, connect to the database, and delete the DB instance. We will do this using Amazon Relational Database Service (Amazon RDS). Amazon RDS makes it easy to set up, operate, and scale a relational database in the cloud. It provides cost-efficient and resizable capacity while managing time-consuming database administration tasks, freeing you up to focus on your applications and business.</description>
    </item>
    
    <item>
      <title>Cleanup</title>
      <link>http://example.org/overview/cleanup/</link>
      <pubDate>Fri, 29 Mar 2019 18:08:37 +0300</pubDate>
      
      <guid>http://example.org/overview/cleanup/</guid>
      <description>Make sure you terminate the resources below to avoid bills.</description>
    </item>
    
    <item>
      <title>Create a NoSQL DB in minutes</title>
      <link>http://example.org/lab-foundations/managed-nosql-db/</link>
      <pubDate>Fri, 29 Mar 2019 17:59:09 +0300</pubDate>
      
      <guid>http://example.org/lab-foundations/managed-nosql-db/</guid>
      <description>Objectives Let&amp;rsquo;s create a NoSQL DB without server to manage and that can scale to tens of thosands of read/write requests per second. Instead of using the AWS Management Console, you will use the AWS Command Line Interface (AWS CLI) to manage DynamoDB auto scaling.
Services Used in this Lab:  Amazon DynamoDB: Amazon DynamoDB is a key-value and document database that delivers single-digit millisecond performance at any scale.  It&amp;rsquo;s a fully managed, multiregion, multimaster database with built-in security, backup and restore, and in-memory caching for internet-scale applications.</description>
    </item>
    
    <item>
      <title>Credits</title>
      <link>http://example.org/authors/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/authors/</guid>
      <description>Project Contributors   Hasan Sabri</description>
    </item>
    
  </channel>
</rss>