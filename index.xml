<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Overview on AWS Turkey Builders Day</title>
    <link>https://cloudayolla.github.io/</link>
    <description>Recent content in Overview on AWS Turkey Builders Day</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 29 Mar 2019 17:33:15 +0300</lastBuildDate>
    
	<atom:link href="https://cloudayolla.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Serverless IoT Communication</title>
      <link>https://cloudayolla.github.io/lab-ml/iot/</link>
      <pubDate>Mon, 15 Apr 2019 17:58:18 +0300</pubDate>
      
      <guid>https://cloudayolla.github.io/lab-ml/iot/</guid>
      <description>Objectives Create an IoT thing and start communicating with it.
Services Used in this Lab:  AWS IoT Core is a managed cloud service that lets connected devices easily and securely interact with cloud applications and other devices. AWS IoT Core can support billions of devices and trillions of messages, and can process and route those messages to AWS endpoints and to other devices reliably and securely. With AWS IoT Core, your applications can keep track of and communicate with all your devices, all the time, even when they aren’t connected.</description>
    </item>
    
    <item>
      <title>Hosting a Global Static Website without Servers</title>
      <link>https://cloudayolla.github.io/lab-foundations/serverless-static-site/</link>
      <pubDate>Fri, 29 Mar 2019 17:57:38 +0300</pubDate>
      
      <guid>https://cloudayolla.github.io/lab-foundations/serverless-static-site/</guid>
      <description>Objectives Let’s look into an interesting use case and see how you can create static websites without any servers. You can launch instances using AWS EC2 service, or AWS LighSail service, and we leave it to you to launch VM instances in the cloud. Amazon S3 can also be used for this purpose.
Services Used in this Lab:  Amazon Simple Storage Service (Amazon S3) is an object storage service that offers industry-leading scalability, data availability, security, and performance.</description>
    </item>
    
    <item>
      <title>Prerequisites</title>
      <link>https://cloudayolla.github.io/overview/prerequisites/</link>
      <pubDate>Fri, 29 Mar 2019 17:39:55 +0300</pubDate>
      
      <guid>https://cloudayolla.github.io/overview/prerequisites/</guid>
      <description>Preparing Cloud Environment Your first lab will focus on preparing your cloud environment and will take around 10 minutes. You need to complete this first lab, otherwise it might be harder for you to complete the following labs.
Services that you will be using in this lab:
AWS Account  AWS Identity and Access Management (IAM) - AWS Identity and Access Management (IAM) enables you to manage access to AWS services and resources securely.</description>
    </item>
    
    <item>
      <title>Developing and Deploying Applications</title>
      <link>https://cloudayolla.github.io/lab-wa/ci-cd-eb/</link>
      <pubDate>Mon, 15 Apr 2019 17:58:18 +0300</pubDate>
      
      <guid>https://cloudayolla.github.io/lab-wa/ci-cd-eb/</guid>
      <description>Objectives In this lab you will quickly develop, build, and deploy an applications on AWS.
Services Used in this Lab:  AWS CodeStar enables you to quickly develop, build, and deploy applications on AWS. AWS CodeStar provides a unified user interface, enabling you to easily manage your software development activities in one place.
 With AWS CodeStar, you can set up your entire continuous delivery toolchain in minutes, allowing you to start releasing code faster.</description>
    </item>
    
    <item>
      <title>ML for Neural Networks based Handwriting Recognition</title>
      <link>https://cloudayolla.github.io/lab-ml/ml/</link>
      <pubDate>Mon, 15 Apr 2019 17:58:18 +0300</pubDate>
      
      <guid>https://cloudayolla.github.io/lab-ml/ml/</guid>
      <description>Objectives You willork with neural networks to build a model that will be able to recognize hand written digits.
Services Used in this Lab:  *Amazon SageMaker: * Amazon SageMaker provides every developer and data scientist with the ability to build, train, and deploy machine learning models quickly. Amazon SageMaker is a fully-managed service that covers the entire machine learning workflow to label and prepare your data, choose an algorithm, train the algorithm, tune and optimize it for deployment, make predictions, and take action.</description>
    </item>
    
    <item>
      <title>Creating a Virtual DC and placing a Cloud Server</title>
      <link>https://cloudayolla.github.io/lab-foundations/virtual-dc-and-server/</link>
      <pubDate>Fri, 29 Mar 2019 17:58:18 +0300</pubDate>
      
      <guid>https://cloudayolla.github.io/lab-foundations/virtual-dc-and-server/</guid>
      <description>Objectives Let’s look into creating virtual data centers in the cloud. This exercise guides you through the steps to create a nondefault VPC with a public subnet, and to launch an instance into your subnet.
This virtual network closely resembles a traditional network that you&amp;rsquo;d operate in your own data center, with the benefits of using the scalable infrastructure of AWS.
Services Used in this Lab:  *Virtual private cloud (VPC) is a virtual network dedicated to your AWS account.</description>
    </item>
    
    <item>
      <title>Expected Costs</title>
      <link>https://cloudayolla.github.io/overview/costs/</link>
      <pubDate>Fri, 29 Mar 2019 17:44:22 +0300</pubDate>
      
      <guid>https://cloudayolla.github.io/overview/costs/</guid>
      <description>Understanding Free Tier Watch this 3 minute Knowledge center video from AWS: https://www.youtube.com/watch?v=rkKvzCskpLE
Expected Costs You are responsible for the cost of the AWS services used while running this lab. As of the date of publication, the baseline cost for running this solution as-is should be around 2-5 USD depending if you are not free tier eligible:
Tagging Cost Management advice: Whenever you are creating a cloud resource, tag it.</description>
    </item>
    
    <item>
      <title>Create a MySQL Relational DB in minutes</title>
      <link>https://cloudayolla.github.io/lab-foundations/managed-sql-db/</link>
      <pubDate>Fri, 29 Mar 2019 17:59:04 +0300</pubDate>
      
      <guid>https://cloudayolla.github.io/lab-foundations/managed-sql-db/</guid>
      <description>Objectives In this tutorial, you will learn how to create an environment to run your MySQL database, connect to the database, and delete the DB instance. We will do this using Amazon Relational Database Service (Amazon RDS). Amazon RDS makes it easy to set up, operate, and scale a relational database in the cloud. It provides cost-efficient and resizable capacity while managing time-consuming database administration tasks, freeing you up to focus on your applications and business.</description>
    </item>
    
    <item>
      <title>Deploying a Scalable Web Application to Production</title>
      <link>https://cloudayolla.github.io/lab-wa/asg-lb-eb/</link>
      <pubDate>Mon, 15 Apr 2019 17:58:18 +0300</pubDate>
      
      <guid>https://cloudayolla.github.io/lab-wa/asg-lb-eb/</guid>
      <description>Objectives In this lab you will quickly replicate your development environment you created in the previous lab and deploy to production with scalability enabled.
Services Used in this Lab:  AWS Elastic Beanstalk is an easy-to-use service for deploying and scaling web applications and services developed with Java, .NET, PHP, Node.js, Python, Ruby, Go, and Docker on familiar servers such as Apache, Nginx, Passenger, and IIS.
 Upload your code and Elastic Beanstalk automatically handles the deployment, from capacity provisioning, load balancing, auto-scaling to application health monitoring.</description>
    </item>
    
    <item>
      <title>Cost Explorer for understanding and managing costs</title>
      <link>https://cloudayolla.github.io/lab-wa/costmon/</link>
      <pubDate>Mon, 15 Apr 2019 17:58:18 +0300</pubDate>
      
      <guid>https://cloudayolla.github.io/lab-wa/costmon/</guid>
      <description>Objectives In this lab you will quickly develop, build, and deploy an applications on AWS.
Services Used in this Lab:  AWS Cost Explorer has an easy-to-use interface that lets you visualize, understand, and manage your AWS costs and usage over time. Get started quickly by creating custom reports (including charts and tabular data) that analyze cost and usage data, both at a high level (e.g., total costs and usage across all accounts) and for highly-specific requests (e.</description>
    </item>
    
    <item>
      <title>Cleaning up Resources You&#39;ve Created</title>
      <link>https://cloudayolla.github.io/overview/cleanup/</link>
      <pubDate>Fri, 29 Mar 2019 17:39:55 +0300</pubDate>
      
      <guid>https://cloudayolla.github.io/overview/cleanup/</guid>
      <description>Congratulations, you have managed to complete all the labs! This was intensive, but now we need to make sure that we clean-up our cloud account. This should take approximately 5 minutes, and ensures on-going costs are not incurred.
Below is a reminder if you haven&amp;rsquo;t terminated the resources. Perform the steps below, in the order that they are written.
ML Module  Open the Amazon SageMaker service Open the Notebook tab and select your notebook.</description>
    </item>
    
    <item>
      <title>Create a NoSQL DB in minutes</title>
      <link>https://cloudayolla.github.io/lab-foundations/managed-nosql-db/</link>
      <pubDate>Fri, 29 Mar 2019 17:59:09 +0300</pubDate>
      
      <guid>https://cloudayolla.github.io/lab-foundations/managed-nosql-db/</guid>
      <description>Objectives Let&amp;rsquo;s create a NoSQL DB without server to manage and that can scale to tens of thosands of read/write requests per second. Instead of using the AWS Management Console, you will use the AWS Command Line Interface (AWS CLI) to manage DynamoDB auto scaling.
Services Used in this Lab:  Amazon DynamoDB: Amazon DynamoDB is a key-value and document database that delivers single-digit millisecond performance at any scale.  It&amp;rsquo;s a fully managed, multiregion, multimaster database with built-in security, backup and restore, and in-memory caching for internet-scale applications.</description>
    </item>
    
    <item>
      <title>Credits</title>
      <link>https://cloudayolla.github.io/authors/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudayolla.github.io/authors/</guid>
      <description>Project Contributors   @akirmak 2019-04-16 Created Cloud Builders Day Guide with Hugo framework based on several blogs/articles/tutorials on AWS
@stachlew 2019-01-30 Reused the lab prep, ML &amp;amp; cleanup sections of his builders day guide</description>
    </item>
    
  </channel>
</rss>